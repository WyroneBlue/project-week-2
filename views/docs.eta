<!DOCTYPE html>
<html data-theme="light" lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://unpkg.com/@picocss/pico@1.*/css/pico.min.css">
    <script src="https://unpkg.com/htmx.org@1.8.6"></script>
    <title><%= it.title %></title>
</head>
<body>
<main class="container">
    <nav aria-label="breadcrumb">
        <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/docs">Docs</a></li>
        </ul>
    </nav>
    <hgroup>
        <h1>Documentation</h1>
        <h2>Stadsdichter API</h2>
    </hgroup>

    <section>
        <h2>Authentication</h2>
        <p>To use any endpoint in this API, include the following header in your requests:</p>
        <pre>Authorization: Bearer <%= it.bk%></pre>

        <p>If the token is valid and has the necessary permissions, the server responds with a 200 OK status code and
            returns the requested data in the response body. If the token is invalid or does not have the necessary
            permissions, the server responds with a 401 Unauthorized status code and returns an error message in the
            response body.</p>
    </section>
    <section>
        <h2>Endpoints</h2>
        <section>
            <h3>GET /api/poetry</h3>
            <p>Generate any poetry type about any theme with this endpoint.</p>
            <h4>Type query parameter</h4>
            <p>The keys are unique identifiers that can be used for the type query parameter for this API
                endpoint. The corresponding values describe the type of poem or literary work that can be generated.</p>
            <table>
                <thead>
                <tr>
                    <th>Key</th>
                    <th>Value</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>1</td>
                    <td>limerick</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>elevenie</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>ollekebolleke</td>
                </tr>
                <tr>
                    <td>4</td>
                    <td>snelsonnet</td>
                </tr>
                <tr>
                    <td>5</td>
                    <td>haiku</td>
                </tr>
                <tr>
                    <td>6</td>
                    <td>romantisch drama plot</td>
                </tr>
                <tr>
                    <td>7</td>
                    <td>tragedie plot</td>
                </tr>
                <tr>
                    <td>8</td>
                    <td>manifest</td>
                </tr>
                <tr>
                    <td>9</td>
                    <td>essay</td>
                </tr>
                <tr>
                    <td>10</td>
                    <td>six word story</td>
                </tr>
                <tr>
                    <td>11</td>
                    <td>toneel opening tragedie</td>
                </tr>
                <tr>
                    <td>12</td>
                    <td>toneel opening komedie</td>
                </tr>
                </tbody>
            </table>
            <h4>Theme query parameter</h4>
            <p>The theme query parameter is mandatory and is the basis to generate a text type based on any given theme
                /
                subject.</p>
            <h4>Example Request:</h4>
            <p>Let's generate a haiku (key 5) about a "mooi bos and warme zomerdag"</p>
            <pre>
GET <%= it.host %>api/poetry?type=5&theme=mooi bos, warme zomerdag
Authorization: Bearer <%= it.bk + "\n" %>
            </pre>
            <p>Request can also be:</p>
            <pre>
GET <%= it.host %>api/poetry?type=haiku&theme=mooi bos, warme zomerdag
Authorization: Bearer <%= it.bk + "\n" %>
            </pre>
            <h4>Response:</h4>
            <pre>
{
    "data": {
        "paragraph": "Mooi bos in zonlicht, warme zomerdag straalt, bladeren dansen."
    }
}
        </pre>
        </section>
        <h3>POST /api/keywords</h3>
        <p>Extract important keywords from a (generated) text.</p>
        <p>This endpoint accepts a POST request with a JSON object containing a paragraph key, and returns a response
            containing a list of keywords based on the provided paragraph. Important is that you use the exact output
            from the <b>/api/poetry</b> GET endpoint as the body of this request. Also don't forget the <b>Content-Type:
                text/plain</b> header!</p>
        <h4>Example Request:</h4>
        <pre>
POST <%= it.host %>api/keywords
Content-Type: text/plain
Authorization: Bearer <%= it.bk + "\n" %>
Body:
{
    "data": {
        "paragraph": "Mooi bos in zonlicht, warme zomerdag straalt, bladeren dansen."
    }
}     </pre>
        <h4>Response:</h4>
        <pre>
{
    "data": {
        "paragraph": "Mooi bos in zonlicht, warme zomerdag straalt, bladeren dansen.",
        "keywords": [
            {
                "keyword": "mooi",
                "alternatives": [
                    "prachtig",
                    "schitterend",
                    "aantrekkelijk",
                    "fraai"
                ]
            },
            {
                "keyword": "bos",
                "alternatives": [
                    "woud",
                    "woud",
                    "beboste gebied",
                    "natuurgebied"
                ]
            },
            {
                "keyword": "zonlicht",
                "alternatives": [
                    "zonneschijn",
                    "zonnestralen",
                    "licht",
                    "stralend licht"
                ]
            },
            {
                "keyword": "warme zomerdag",
                "alternatives": [
                    "zwoele zomerdag",
                    "hete zomerdag",
                    "zonnige zomerdag",
                    "zomerse dag"
                ]
            },
            {
                "keyword": "dansen",
                "alternatives": [
                    "bewegen",
                    "zwaaien",
                    "wiegen",
                    "fonkelen"
                ]
            }
        ]
    }
}
        </pre>
        <section>
            <h3>POST /api/rewrite</h3>
            <p>Rewrite any given text into a new poetic text based on a word in the text that needs to be replaced by another.</p>
            <p>This endpoint accepts a POST request with a JSON object containing a paragraph key, and returns a response containing a new string where all instances of a given word, specified by the old parameter, are replaced with another word, specified by the new parameter. Just like the above endpoint, don't forget the headers!</p>
            <h4>Example Request:</h4>
            <pre>
POST <%= it.host %>api/rewrite?old=mooi&new=fraai
Content-Type: text/plain
Authorization: Bearer <%= it.bk + "\n" %>
Body:
{
    "data": {
        "paragraph": "Mooi bos in zonlicht, warme zomerdag straalt, bladeren dansen."
    }
}     </pre>
            <h4>Response:</h4>
            <pre>
{
    "data": {
        "paragraph": "Fraai bos in zonlicht, warme zomerdag schittert, bladeren dansen vrolijk."
    }
}
            </pre>
        </section>
    </section>
</main>
</body>
</html>
